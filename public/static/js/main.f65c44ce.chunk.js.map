{"version":3,"sources":["services/api.js","redux/auth/authActions.js","redux/auth/authTypes.js","redux/workout/workoutActions.js","redux/workout/workoutTypes.js","redux/exercise/exerciseActions.js","redux/exercise/exerciseTypes.js","components/SignIn.js","components/SignUp.js","components/LandingContainer.js","components/WorkoutItem.js","components/NewExerciseSelector.js","components/DayHeader.js","components/DayCard.js","components/WeekGrid.js","components/PlannerBodyContainer.js","components/ExerciseCard.js","components/ExerciseCategoryContainer.js","components/LearningCenterBodyContainer.js","components/SettingsBodyContainer.js","components/DashboardBody.js","components/DashboardContainer.js","components/MainContainer.js","redux/auth/authReducer.js","redux/workout/workoutReducer.js","redux/exercise/exerciseReducer.js","redux/reducerList.js","redux/store.js","components/App.js","index.js"],"names":["API_ROOT","headers","Accepts","Authorization","localStorage","getItem","api","signUp","data","fetch","method","body","JSON","stringify","then","userData","json","login","getCurrentUser","deleteUser","user","id","deleteResponse","updateCurrentUser","userInfo","updatedUserInfo","getWorkouts","workoutsData","updateWorkout","workoutInfo","user_id","updatedWorkoutInfo","createNewWorkout","deleteWorkout","workout","getAllExercises","signIn","loggedInUser","type","payload","getWeekWorkouts","weekWorkouts","setExerciseList","exercises","SignIn","props","dispatch","useDispatch","classes","makeStyles","theme","paper","marginTop","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","submit","useStyles","useState","username","setUsername","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","e","preventDefault","error","console","log","setItem","jwt","history","push","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","Button","color","Grid","container","item","Link","href","firstName","setFirstName","lastName","setLastName","usernameInput","React","createRef","passwordInput","first_name","last_name","ref","root","minHeight","playButton","paddingTop","paddingBottom","containerTop","extendedIcon","marginRight","LandingContainer","playStatus","setPlayStatus","Box","justifyContent","video","url","playing","controls","height","Fab","onClick","to","card","paddingRight","marginBottom","grey","cardHeader","padding","textAlign","button","title","fontSize","WorkoutItem","week","useSelector","state","workoutReducer","selectedWeekWorkouts","description","setDescription","updateWorkoutList","updatedWorkout","map","day","Card","CardHeader","Checkbox","checked","completed","persist","inputProps","action","IconButton","message","workoutToDelete","filter","exercise","CardContent","multiline","rowsMax","nativeEvent","inputType","formControl","maxHeight","purple","input","marginLeft","flex","iconButton","divider","inputHolder","NewExerciseSelector","exerciseReducer","exerciseId","setExerciseId","onSelectExercise","addNewWorkout","dayOfTheWeek","dateRbFormatter","workout_date","getDay","returnedCopy","rbDate","arr","split","Date","parseInt","getMenuItems","category","MenuItem","key","Math","random","Paper","FormControl","InputLabel","Select","autoWidth","defaultValue","Input","ListSubheader","InputBase","placeholder","Divider","orientation","exercise_id","currentDate","year","month","DayHeader","flexGrow","dayName","overflow","DayCard","workouts","WeekGrid","weekNames","Object","keys","length","index","dateCopy","dateJsFormatter","firstDayOfWeek","setDate","getDate","calendar","weekGrid","PlannerBodyContainer","jsDate","getMonth","getFullYear","setCurrentDate","authReducer","useEffect","allWorkouts","workoutsForWeek","getWorkoutsForWeek","workoutList","Array","jsCurrentDate","simpleDateFormatter","filteredWorkouts","workoutDate","simpleDate","p","alignSelf","dateSelected","calendarType","today","expand","transform","transition","transitions","create","duration","shortest","expandOpen","ExerciseCard","rel","aria-label","subheader","flexWrap","ExerciseCategoryContainer","TabPanel","children","other","role","hidden","aria-labelledby","a11yProps","appBar","LearningCenterBodyContainer","setValue","getExercisesByCategory","AppBar","position","app","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","Tab","SettingsBodyContainer","zIndex","drawer","flexShrink","drawerPaper","content","box","toolbar","mixins","DashboardBody","upperSideBarOptions","Toolbar","noWrap","Drawer","List","optionData","ListItem","ListItemIcon","ListItemText","primary","removeItem","selection","getDashboardContentComponent","DashboardContainer","match","params","MainContainer","exact","path","render","routerProps","SignUp","initialState","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f65c44ce.chunk.js","sourcesContent":["const API_ROOT = `http://localhost:3000/api/v1`; // root url of backend (rails)\nconst token = localStorage.getItem(\"token\"); // current value of jwt token in local storage\n\n// headers for all requests never change, so store them in a variable for use for all fetches\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accepts: \"application/json\",\n  Authorization: token // special note for authorization, if token is not present, requests will have issues\n};\n\n// METHOD: api request for logging a user in and returning the user information (or error)\nconst login = data => {\n  return fetch(`${API_ROOT}/login`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(data)\n  }).then(userData => userData.json());\n};\n\n// METHOD: api request for signing up a NEW user and passing that new user data back (or an error)\nconst signUp = data => {\n  return fetch(`${API_ROOT}/users`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(data)\n  }).then(userData => userData.json());\n};\n\n// METHOD: api request to delete a user\nconst deleteUser = user => {\n  return fetch(`${API_ROOT}/users/${user.id}`, {\n    method: \"DELETE\",\n    headers\n  }).then(deleteResponse => {\n    return deleteResponse.json();\n  });\n};\n\nconst getCurrentUser = () => {\n  return fetch(`${API_ROOT}/user_is_authed`, {\n    headers\n  }).then(userData => {\n    return userData.json();\n  });\n};\n\nconst updateCurrentUser = userInfo => {\n  return fetch(`${API_ROOT}/users/${userInfo.id}`, {\n    method: \"PATCH\",\n    headers,\n    body: JSON.stringify(userInfo)\n  }).then(updatedUserInfo => {\n    return updatedUserInfo.json();\n  });\n};\n\nconst createNewWorkout = workoutInfo => {\n  return fetch(`${API_ROOT}/users/${workoutInfo.user_id}/workouts`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(workoutInfo)\n  }).then(updatedWorkoutInfo => {\n    return updatedWorkoutInfo.json();\n  });\n};\n\nconst deleteWorkout = workout => {\n  return fetch(`${API_ROOT}/users/${workout.user_id}/workouts/${workout.id}`, {\n    method: \"DELETE\",\n    headers\n  }).then(deleteResponse => {\n    return deleteResponse.json();\n  });\n};\n\nconst updateWorkout = workoutInfo => {\n  return fetch(\n    `${API_ROOT}/users/${workoutInfo.user_id}/workouts/${workoutInfo.id}`,\n    {\n      method: \"PATCH\",\n      headers,\n      body: JSON.stringify(workoutInfo)\n    }\n  ).then(updatedWorkoutInfo => {\n    return updatedWorkoutInfo.json();\n  });\n};\n\nconst getWorkouts = user => {\n  return fetch(`${API_ROOT}/users/${user.id}/workouts`, {\n    headers\n  }).then(workoutsData => {\n    return workoutsData.json();\n  });\n};\n\nconst getAllExercises = () => {\n  return fetch(`${API_ROOT}/exercises`, {\n    headers\n  }).then(userData => {\n    return userData.json();\n  });\n};\n\n// export all the api service methods for use in other files\nexport const api = {\n  auth: {\n    signUp,\n    login,\n    getCurrentUser,\n    deleteUser,\n    updateCurrentUser\n  },\n  workouts: {\n    getWorkouts,\n    updateWorkout,\n    createNewWorkout,\n    deleteWorkout\n  },\n  exercises: {\n    getAllExercises\n  }\n};\n","import { SIGN_IN } from \"./authTypes\";\nimport { LOGOUT } from \"./authTypes\";\n\n// Action for signing in\nexport const signIn = loggedInUser => {\n  // takes a user object\n  return {\n    type: SIGN_IN, // sets type for identification\n    payload: loggedInUser // payload of action is set as loggedInUser argument\n  };\n};\n\n// Action for logging out\nexport const logout = () => {\n  return {\n    type: LOGOUT // sets type for identification\n  };\n};\n","export const SIGN_IN = 'SIGN_IN'\nexport const LOGOUT = 'LOGOUT'","import { GET_WORKOUTS} from \"./workoutTypes\";\n\n// Sets redux state of the current week of workouts\nexport const getWeekWorkouts = weekWorkouts => {\n  return {\n    type: GET_WORKOUTS, // action type\n    payload: weekWorkouts // payload is set as array of 7 days of workouts\n  };\n};\n","export const GET_WORKOUTS = 'GET_WORKOUTS'\n","import { GET_EXERCISES } from \"./exerciseTypes\";\n\n// Calendar action for when a calendar date is selected\nexport const setExerciseList = exercises => { // takes in the date object\n    return {\n      type: GET_EXERCISES, // action type\n      payload: exercises // payload is set as the selected date argument\n    };\n  };","export const GET_EXERCISES = 'GET_EXERCISES'","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { api } from \"../services/api\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../redux/actionList\";\n\nconst SignIn = props => {\n  // React hook to use Redux dispatch\n  const dispatch = useDispatch();\n\n  // material UI styles\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      marginTop: '50%',\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  }));\n\n  // material UI setting for ease of access (reference above)\n  const classes = useStyles();\n\n  // create state of username\n  const [username, setUsername] = useState(\"\");\n\n  // create state of password\n  const [password, setPassword] = useState(\"\");\n\n  // EVENT HANDLER - for when username field changes\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n\n  // EVENT HANDLER - for when password changes\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // EVENT HANDLER - for when form is submitted\n  const handleSubmit = e => {\n    e.preventDefault(); // prevent refresh behavior on form submit\n    api.auth\n      .login({ username: username, password: password }) // use API AUTH service method to post 'login' to get userData\n      .then(userData => {\n        // after we get back the userData\n        if (!userData.error) {\n          // if the returned userData DID NOT have a login error\n          localStorage.setItem(\"token\", userData.jwt); // assign the local storage token of the logged in user as the user's JWT encrypted token\n          dispatch(signIn(userData));\n          props.history.push(\"dashboard/planner\");\n        } else {\n          console.log(\"Got an error here\");\n        }\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign In\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleUsernameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handlePasswordChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","// React specific imports\nimport React, { useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../redux/actionList\";\n\n// MUI imports\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\n  // material UI styles\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      marginTop: '50%',\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  }));\n\nconst SignIn = props => {\n  // React hook to use Redux dispatch\n  const dispatch = useDispatch();\n\n  // material UI setting for ease of access (reference above)\n  const classes = useStyles();\n\n  const [username, setUsername] = useState(\"\");   // local state of username (controlled form)\n\n  // create state of password\n  const [password, setPassword] = useState(\"\"); // local state of password (controlled form)\n\n  // create state of first name\n  const [firstName, setFirstName] = useState(\"\"); // local state of first name (controlled form)\n\n  // create state of last name\n  const [lastName, setLastName] = useState(\"\"); // local state of last name (controlled form)\n\n  // create a ref for the username and/or password\n  const usernameInput = React.createRef();\n  const passwordInput = React.createRef();\n\n  // EVENT HANDLER - for when username field changes\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n\n  // EVENT HANDLER - for when password changes\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // EVENT HANDLER - for when password changes\n  const handleFirstNameChange = e => {\n    setFirstName(e.target.value);\n  };\n\n  // EVENT HANDLER - for when password changes\n  const handleLastNameChange = e => {\n    setLastName(e.target.value);\n  };\n\n  // EVENT HANDLER - for when form is submitted\n  const handleSubmit = e => {\n    e.preventDefault();\n    api.auth\n      .signUp({\n        user: {\n          username,\n          password,\n          first_name: firstName,\n          last_name: lastName\n        }\n      })\n      .then(userData => {\n        if (!userData.error) {\n          localStorage.setItem(\"token\", userData.jwt); // assign the local storage token of the logged in user as the user's JWT encrypted token\n          dispatch(signIn(userData));\n          props.history.push(\"/dashboard/planner\");\n        } else {\n          console.log(\"Got an error here\");\n          // where I want to add the error props on both username input and password input\n          console.log(usernameInput);\n          console.log(passwordInput);\n        }\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            ref={usernameInput}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleUsernameChange}\n          />\n          <TextField\n            ref={passwordInput}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handlePasswordChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"first_name\"\n            label=\"First Name\"\n            name=\"first_name\"\n            autoComplete=\"first_name\"\n            autoFocus\n            onChange={handleFirstNameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"last_name\"\n            label=\"Last Name\"\n            name=\"last_name\"\n            autoComplete=\"last_name\"\n            autoFocus\n            onChange={handleLastNameChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n        <Grid container>\n          <Grid item>\n            <Link href=\"/login\" variant=\"body2\">\n              {\"Already Have an Account? Sign In.\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","// React specific imports\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Box from \"@material-ui/core/Box\";\n\n// MUI JSS styling\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\"\n  },\n  playButton: {\n    paddingTop: \"10px\",\n    paddingBottom: \"60px\"\n  },\n  containerTop: {\n    paddingBottom: \"40px\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\n// Renders the Landing Container\nconst LandingContainer = () => {\n  const classes = useStyles(); // rename the styles created above\n\n  const [playStatus, setPlayStatus] = useState(false); // local state for when the video is played\n\n  // EVENT HANDLER - when video is clicked\n  const onPlayVideo = () => {\n    setPlayStatus(true);\n  };\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        className={classes.containerTop}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <Box\n          className={classes.containerTop}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          <ReactPlayer\n            className={classes.video}\n            url=\"https://mod5-project.s3-us-west-2.amazonaws.com/VIDEO+VOPY+2.mp4\"\n            playing={playStatus}\n            controls={false}\n            height={680}\n            width={1220}\n          />\n        </Box>\n        <Fab\n          onClick={onPlayVideo}\n          variant=\"extended\"\n          color=\"secondary\"\n          className={classes.margin}\n        >\n          <NavigationIcon className={classes.extendedIcon} />\n          Play Video\n        </Fab>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <Link to=\"/login\">\n          <Fab variant=\"extended\" color=\"primary\" className={classes.margin}>\n            <NavigationIcon className={classes.extendedIcon} />\n            Enter\n          </Fab>\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LandingContainer;\n","// React specific imports\nimport React, { useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeekWorkouts } from \"../redux/actionList\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport grey from '@material-ui/core/colors/grey';\n\n// JSS Styling\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: \"100%\",\n    paddingRight: \"4px\",\n    marginBottom: \"4px\",\n    backgroundColor: grey['300']\n  },\n  cardHeader: {\n    padding: \"6px\",\n    textAlign: \"center\"\n  },\n  button: {\n    padding: \"0px\"\n  },\n  title: {\n    color: \"red\",\n    fontSize: 14\n  }\n}));\n\n// This is the workout item that displays a specific workout with a delete button, description, and complete button\nconst WorkoutItem = props => {\n  const dispatch = useDispatch(); // allow this component to change redux state\n  const week = useSelector(state => state.workoutReducer.selectedWeekWorkouts); // get redux state for the selected week\n  const classes = useStyles();\n\n  const [description, setDescription] = useState(props.workout.description); // local state for description on text field\n\n  // this method returns the new version of the week after a specific workout has been updated\n  const updateWorkoutList = updatedWorkout => {\n    // map through the week, and find the day which the updated workout resides, and update the entry\n    const updatedWeek = week.map(day => {\n      return day.map(workout => {\n        return workout.id !== updatedWorkout.id ? workout : updatedWorkout;\n      });\n    });\n\n    return updatedWeek;\n  };\n\n  // this method returns the new version of the week after a specific workout has been updated\n  const deleteWorkout = workoutToDelete => {\n    // map through the week, and find the day which the updated workout resides, and update the entry\n    const updatedWeek = week.map(day => {\n      return day.filter(workout => {\n        return workout.id !== workoutToDelete.id;\n      });\n    });\n\n    return updatedWeek;\n  };\n\n  // EVENT HANDLER: when button for completion is clicked\n  const onToggleCompletion = e => {\n    e.persist();\n    // run api service to update the workout with the toggled completion status\n    api.workouts\n      .updateWorkout({\n        ...props.workout,\n        completed: !props.workout.completed\n      })\n      .then(\n        updatedWorkout =>\n          dispatch(getWeekWorkouts(updateWorkoutList(updatedWorkout))) // dispatch the UPDATED WORKOUT LIST\n      );\n  };\n\n  // EVENT HANDLER: when description is officially updated\n  const onUpdateDescription = () => {\n    // e.preventDefault();\n    // e.persist();\n\n    api.workouts\n      .updateWorkout({\n        ...props.workout,\n        description: description\n      })\n      .then(\n        updatedWorkout =>\n          dispatch(getWeekWorkouts(updateWorkoutList(updatedWorkout))) // dispatch the UPDATED WORKOUT LIST\n      );\n  };\n\n  // EVENT HANDLER: when workout item delete button is clicked\n  const onDeleteWorkout = e => {\n    api.workouts.deleteWorkout(props.workout).then(message => {\n      dispatch(getWeekWorkouts(deleteWorkout(props.workout)));\n    });\n  };\n\n  // EVENT HANDLER: when description text field is typed in\n  const onDescriptionChange = e => {\n    e.persist();\n    if (e.nativeEvent.inputType !== \"insertLineBreak\") {\n      setDescription(e.target.value);\n    } else {\n      onUpdateDescription();\n    }\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        classes={{\n          title: classes.title\n        }}\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            checked={props.workout.completed}\n            onChange={onToggleCompletion}\n            value=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        action={\n          <IconButton className=\"boogie\" onClick={onDeleteWorkout}>\n            <DeleteForeverIcon className={classes.button} fontSize=\"large\" />\n          </IconButton>\n        }\n        title={props.workout.exercise.name}\n      />\n      <CardContent>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Description\"\n          multiline\n          rowsMax=\"4\"\n          value={description}\n          onChange={onDescriptionChange}\n          // onKeyPress={onUpdateDescription}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default WorkoutItem;\n","// React imports\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { api } from \"../services/api\";\nimport { getWeekWorkouts } from \"../redux/actionList\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Box from \"@material-ui/core/Box\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport purple from '@material-ui/core/colors/purple';\n\n\n// JSS styling\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    maxWidth: \"100%\",\n    maxHeight: \"200px\"\n  },\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: purple[\"200\"]\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  inputHolder: {\n    width: \"100%\"\n  }\n}));\n\nconst NewExerciseSelector = props => {\n  const classes = useStyles(); // use JSS styles\n\n  const exercises = useSelector(state => state.exerciseReducer.exercises); // redux state to grab exercises for drop down\n  const week = useSelector(state => state.workoutReducer.selectedWeekWorkouts); // get redux state for the selected week\n  const [exerciseId, setExerciseId] = useState(null); // local state for exercise id from drop down selection\n  const [description, setDescription] = useState(\"\"); // local state for description on text field\n\n  const dispatch = useDispatch(); // dispatch for updating redux state\n\n  // EVENT HANDLER: when description text field is typed in\n  const onDescriptionChange = e => {\n    e.persist();\n    setDescription(e.target.value);\n  };\n\n  // EVENT HANDLER: when form is submitted to create a new workout\n  const onCreateWorkout = e => {\n    e.preventDefault();\n    e.persist();\n\n    if (exerciseId !== null) {\n      const workoutInfo = {\n        user_id: props.user.id,\n        exercise_id: exerciseId,\n        completed: false,\n        description: description,\n        workout_date: new Date(\n          props.currentDate.year,\n          props.currentDate.month - 1,\n          props.currentDate.day\n        )\n      };\n\n      api.workouts.createNewWorkout(workoutInfo).then(workout => {\n        dispatch(getWeekWorkouts(addNewWorkout(workout)));\n      });\n    }\n  };\n\n  // EVENT HANDLER: when a drop down option is selected\n  const onSelectExercise = e => {\n    e.persist();\n    setExerciseId(e.target.value);\n  };\n\n  // this method updates the current redux state by adding a new workout to the appropriate day of the week\n  const addNewWorkout = workout => {\n    const dayOfTheWeek = dateRbFormatter(workout.workout_date).getDay();\n    const returnedCopy = [...week];\n    returnedCopy[dayOfTheWeek].push(workout);\n    return returnedCopy;\n  };\n\n  // calendar date formatter (for incoming api dates) goes here\n  const dateRbFormatter = rbDate => {\n    const arr = rbDate.split(\"-\"); // split the string date (e.g \"2020-04-06\") by dashes\n    return new Date(parseInt(arr[0]), parseInt(arr[1]) - 1, parseInt(arr[2]));\n  };\n\n  // this maps the exercises to options for the drop down\n  const getExerciseOptions = () => {\n    return (\n      <FormControl className={classes.formControl}>\n        <InputLabel>Add Exercise</InputLabel>\n        <Select\n          autoWidth\n          onChange={onSelectExercise}\n          defaultValue={999}\n          input={<Input />}\n        >\n          <MenuItem value={999}>\n            <em>Choose Exercise</em>\n          </MenuItem>\n          <ListSubheader>Arms</ListSubheader>\n          {getMenuItems(\"Arms\")}\n          <ListSubheader>Chest</ListSubheader>\n          {getMenuItems(\"Chest\")}\n          <ListSubheader>Legs</ListSubheader>\n          {getMenuItems(\"Legs\")}\n          <ListSubheader>Back</ListSubheader>\n          {getMenuItems(\"Back\")}\n          <ListSubheader>Shoulders</ListSubheader>\n          {getMenuItems(\"Shoulders\")}\n          <ListSubheader>Hips</ListSubheader>\n          {getMenuItems(\"Hips\")}\n          <ListSubheader>Cardio</ListSubheader>\n          {getMenuItems(\"Cardio\")}\n          <ListSubheader>Compound</ListSubheader>\n          {getMenuItems(\"Compound\")}\n          <ListSubheader>Activity</ListSubheader>\n          {getMenuItems(\"Activity\")}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const getMenuItems = category => {\n    return exercises\n      .filter(exercise => {\n        return exercise.category === category;\n      })\n      .map(exercise => {\n        return (\n          <MenuItem key={Math.random()} value={exercise.id}>\n            {exercise.name}\n          </MenuItem>\n        );\n      });\n  };\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <Box\n        className={classes.inputHolder}\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        {getExerciseOptions()}\n        <Box display=\"flex\" flexDirection=\"row\">\n          <InputBase\n            className={classes.input}\n            placeholder=\"Workout Details\"\n            onChange={onDescriptionChange}\n          />\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            onClick={onCreateWorkout}\n          >\n            <AddBoxIcon />\n          </IconButton>\n        </Box>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default NewExerciseSelector;\n","// React imports\nimport React from \"react\";\n\n// MUI imports\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst DayHeader = props => {\n\n  return (\n    <Box display=\"flex\">\n      <Box flexGrow={1}>\n        <EventNoteIcon />\n      </Box>\n      <Box>\n        <Typography>{props.dayName}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DayHeader;\n","// React specific imports\nimport React from \"react\";\nimport WorkoutItem from \"./WorkoutItem\";\nimport NewExerciseSelector from \"./NewExerciseSelector\";\nimport DayHeader from \"./DayHeader\";\n\n// MUI imports\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport purple from '@material-ui/core/colors/purple';\n\n// MUI JSS styling\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1%\",\n    height: \"100%\",\n    width: \"14%\",\n    backgroundColor: purple['300']\n  },\n  paper: {\n    height: \"100%\",\n    marginTop: '4px',\n    overflow: 'scroll',\n    padding: '4%',\n    backgroundColor: purple[\"100\"]\n  }\n}));\n\nconst DayCard = props => {\n  const classes = useStyles();\n\n  // this method renders a WorkoutItem for each workout passed via props for the day\n  const createWorkoutItems = () => {\n    return props.workouts.map(workout => {\n      return <WorkoutItem workout={workout} key={Math.random()} />;\n    });\n  };\n\n  return (\n    <Paper className={classes.root} variant=\"outlined\">\n      <DayHeader\n        dayName={`${props.name} (${props.currentDate.month}/${props.currentDate.day})`}\n      />\n      <NewExerciseSelector currentDate={props.currentDate} user={props.user}/>\n      <Paper className={classes.paper}>{createWorkoutItems()}</Paper>\n    </Paper>\n  );\n};\n\nexport default DayCard;\n","// React specific imports\nimport React from \"react\";\nimport DayCard from \"./DayCard\";\n\n// MUI imports\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// JSS Styling\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n}));\n\nconst WeekGrid = props => {\n  const classes = useStyles();\n\n  // an array that holds the week names in order that they will\n  const weekNames = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  // method that creates Day Cards from each day in the selected Week\n  const createDayCards = () => {\n\n    if (Object.keys(props.weekWorkouts).length !== 0) {\n      return props.weekWorkouts.map((day, index) => {\n        const dateCopy = props.dateJsFormatter(props.firstDayOfWeek)\n        props.firstDayOfWeek.setDate(props.firstDayOfWeek.getDate() + 1);\n        return (\n          <DayCard\n            key={Math.random()}\n            currentDate={dateCopy}\n            name={weekNames[index]}\n            workouts={props.weekWorkouts[index]}\n            user={props.user}\n          />\n        );\n      });\n    } else {\n      return null;\n    }\n  };\n\n  return <Box className={classes.root} display=\"flex\" justifyContent=\"center\" flexDirection=\"row\">{createDayCards()}</Box>;\n};\n\nexport default WeekGrid;\n\n\n","// REACT specific imports\nimport React, { useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getWeekWorkouts, setExerciseList } from \"../redux/actionList\";\nimport Calendar from \"react-calendar\";\nimport WeekGrid from \"./WeekGrid\";\n\n// MUI imports\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// MUI JSS styling\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\",\n    paddingBottom: \"10px\",\n    paddingTop: \"100px\"\n  },\n  calendar: {\n    flexGrow: 1,\n    height: \"auto\"\n  },\n  weekGrid: {\n    flexGrow: 1,\n    minHeight: \"80%\",\n    width: \"100%\"\n  }\n}));\n\n// Planner Container taht holds Day Cards, and Calendar\nconst PlannerBodyContainer = props => {\n  const classes = useStyles(); // JSS styling\n\n  // calendar date formatter (for incoming JS Dates) goes here\n  const dateJsFormatter = jsDate => {\n    return {\n      day: jsDate.getDate(),\n      month: jsDate.getMonth() + 1,\n      year: jsDate.getFullYear()\n    };\n  };\n\n  // local state\n  const [currentDate, setCurrentDate] = useState(dateJsFormatter(new Date()));\n\n  // redux state\n  let selectedWeekWorkouts = useSelector(\n    state => state.workoutReducer.selectedWeekWorkouts\n  );\n\n  // get the user from state\n  const user = useSelector(state => state.authReducer.user);\n\n  // dispatch\n  const dispatch = useDispatch();\n\n  // this method handles what happens when state changes (or when a re-render occurs)\n  useEffect(() => {\n\n    console.log(user);\n\n    // api service to get the current users workouts grouped by day\n    api.workouts.getWorkouts(user).then(allWorkouts => {\n      console.log(allWorkouts);\n      const workoutsForWeek = getWorkoutsForWeek(allWorkouts);\n      dispatch(getWeekWorkouts(workoutsForWeek)); // dispatch to change the days of the week selected\n    });\n    api.exercises\n      .getAllExercises()\n      .then(exercises => dispatch(setExerciseList(exercises)));\n  }, [user, dispatch, currentDate]);\n\n  // EVENT HANDLER - for calendar click\n  const handleCalendarClick = dateSelected => {\n    setCurrentDate(dateJsFormatter(dateSelected)); // set the current date\n  };\n\n  // gets the workouts for the week\n  const getWorkoutsForWeek = workoutList => {\n    const weekWorkouts = new Array([], [], [], [], [], [], []);\n    const jsCurrentDate = simpleDateFormatter(currentDate);\n    const dayOfTheWeek = jsCurrentDate.getDay();\n    jsCurrentDate.setDate(jsCurrentDate.getDate() - dayOfTheWeek);\n\n    const workoutWeekInfo = weekWorkouts.map(workouts => {\n      const filteredWorkouts = workoutList.filter(workout => {\n        const workoutDate = dateRbFormatter(workout.workout_date);\n        return (\n          workout.user_id === user.id &&\n          workoutDate.getDate() === jsCurrentDate.getDate() &&\n          workoutDate.getMonth() === jsCurrentDate.getMonth() &&\n          workoutDate.getFullYear() === jsCurrentDate.getFullYear()\n        );\n      });\n      jsCurrentDate.setDate(jsCurrentDate.getDate() + 1);\n      return filteredWorkouts;\n    });\n\n    return workoutWeekInfo;\n  };\n\n  // calendar date formatter (for incoming api dates) goes here\n  const dateRbFormatter = rbDate => {\n    const arr = rbDate.split(\"-\"); // split the string date (e.g \"2020-04-06\") by dashes\n    return new Date(parseInt(arr[0]), parseInt(arr[1]) - 1, parseInt(arr[2]));\n  };\n\n  // calendar date formatter (for incoming JS Dates) goes here\n  const simpleDateFormatter = simpleDate => {\n    return new Date(simpleDate.year, simpleDate.month - 1, simpleDate.day);\n  };\n\n  // gets the first day of the week\n  const firstDayOfWeek = () => {\n    const today = new Date(\n      currentDate.year,\n      currentDate.month - 1,\n      currentDate.day\n    );\n\n    const dayOfTheWeek = today.getDay();\n\n    today.setDate(today.getDate() - dayOfTheWeek);\n    return today;\n  };\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      justifyContent=\"center\"\n      flexDirection=\"column\"\n    >\n      <Box className={classes.calendar} p={1} alignSelf=\"center\">\n        <Calendar\n          onChange={handleCalendarClick}\n          value={\n            new Date(currentDate.year, currentDate.month - 1, currentDate.day)\n          }\n          calendarType=\"US\"\n        />\n      </Box>\n      <Box className={classes.weekGrid} p={1} alignSelf=\"center\">\n        <WeekGrid\n          firstDayOfWeek={firstDayOfWeek()}\n          currentDate={currentDate}\n          weekWorkouts={selectedWeekWorkouts}\n          dateJsFormatter={dateJsFormatter}\n          user={user}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default PlannerBodyContainer;\n","// React specific imports\nimport React from \"react\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\n// MUI JSS styling\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: \"300px\",\n    height: \"300px\",\n    margin: '6px'\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  title: {\n    color: \"red\",\n    fontSize: 15\n  }\n}));\n\nconst ExerciseCard = props => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        classes={{\n          title: classes.title\n        }}\n        action={\n          <a\n            href={`https://www.youtube.com/results?search_query=How+To+Do+${props.exercise.name}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\" \"}\n            <IconButton aria-label=\"add to favorites\">\n              <YouTubeIcon />\n            </IconButton>\n          </a>\n        }\n        title={props.exercise.name}\n        subheader={`${props.exercise.category} Exercise`}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         {props.exercise.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExerciseCard;\n","// React specific imports\nimport React from 'react';\nimport ExerciseCard from './ExerciseCard'\n\n// MUI imports\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n  }));\n\nconst ExerciseCategoryContainer = props => {\n    \n    const classes = useStyles();\n\n    const createExerciseCards = () => {\n        return props.exercises.map(exercise => {\n            return <ExerciseCard key={Math.random()} exercise={exercise} />\n        })\n    }\n\n    return (\n        <Box className={classes.root}>\n            {createExerciseCards()}\n        </Box>\n    );\n};\n\nexport default ExerciseCategoryContainer;","// React specific imports\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ExerciseCategoryContainer from \"./ExerciseCategoryContainer\";\nimport { api } from \"../services/api\";\nimport { setExerciseList } from \"../redux/actionList\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props; // destructuring props\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80\",\n    paddingTop: '40px',\n    marginLeft: '200px'\n  },\n  appBar: {\n    display: 'flex',\n  }\n}));\n\nexport default function LearningCenterBodyContainer() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const dispatch = useDispatch();\n  const exercises = useSelector(state => state.exerciseReducer.exercises);\n\n  useEffect(() => {\n    api.exercises\n    .getAllExercises()\n    .then(exercises => dispatch(setExerciseList(exercises)));\n  }, [dispatch])\n\n  const getExercisesByCategory = category => {\n    return exercises.filter(exercise => {\n      return exercise.category === category;\n    });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\" className={classes.app}>\n        <Tabs\n        \n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Arms\" {...a11yProps(0)} />\n          <Tab label=\"Chest\" {...a11yProps(1)} />\n          <Tab label=\"Legs\" {...a11yProps(2)} />\n          <Tab label=\"Back\" {...a11yProps(3)} />\n          <Tab label=\"Shoulders\" {...a11yProps(4)} />\n          <Tab label=\"Hips\" {...a11yProps(5)} />\n          <Tab label=\"Cardio\" {...a11yProps(6)} />\n          <Tab label=\"Compound\" {...a11yProps(7)} />\n          <Tab label=\"Activities\" {...a11yProps(8)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ExerciseCategoryContainer exercises={getExercisesByCategory(\"Arms\")} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ExerciseCategoryContainer\n          exercises={getExercisesByCategory(\"Chest\")}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ExerciseCategoryContainer exercises={getExercisesByCategory(\"Legs\")} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <ExerciseCategoryContainer exercises={getExercisesByCategory(\"Back\")} />\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <ExerciseCategoryContainer\n          exercises={getExercisesByCategory(\"Shoulders\")}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <ExerciseCategoryContainer exercises={getExercisesByCategory(\"Hips\")} />\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        <ExerciseCategoryContainer\n          exercises={getExercisesByCategory(\"Cardio\")}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={7}>\n        <ExerciseCategoryContainer\n          exercises={getExercisesByCategory(\"Compound\")}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={8}>\n        <ExerciseCategoryContainer\n          exercises={getExercisesByCategory(\"Activity\")}\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","// React specific imports\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { api } from \"../services/api\";\nimport { logout } from \"../redux/actionList\";\nimport { Link } from \"react-router-dom\";\n// MUI imports\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// material UI styles\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst SettingsBodyContainer = props => {\n  const classes = useStyles(); // material UI setting for ease of access (reference above)\n\n  const user = useSelector(state => state.authReducer.user); // grab the user from redux store\n\n  const dispatch = useDispatch(); // used for dispatching actions to redux store\n\n  const [firstName, setFirstName] = useState(user.first_name); // local state for user first name (controlled form)\n  const [lastName, setLastName] = useState(user.last_name); // local state for user last name (controlled form)\n  const [username, setUsername] = useState(user.username); // local state for username (controlled form)\n\n  // EVENT HANDLER - username change\n  const onUsernameChange = e => {\n    e.persist();\n    setUsername(e.target.value);\n  };\n\n  // EVENT HANDLER - first name change\n  const onFirstNameChange = e => {\n    e.persist();\n    setFirstName(e.target.value);\n  };\n\n  // EVENT HANDLER - last name change\n  const onLastNameChange = e => {\n    e.persist();\n    setLastName(e.target.value);\n  };\n\n  // EVENT HANDLER - form submission\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const userInfo = {\n      id: user.id,\n      first_name: firstName,\n      last_name: lastName,\n      username: username\n    };\n\n    console.log(userInfo);\n\n    api.auth\n      .updateCurrentUser(userInfo)\n      .then(userInfo => console.log(userInfo));\n  };\n\n  // EVENT HANDLER - delete button click\n  const onDeleteClick = e => {\n    // run the api service to delete this account\n    api.auth.deleteUser(user).then(message => {\n      dispatch(logout());\n    });\n  };\n\n  useEffect(() => {\n    setFirstName(user.first_name);\n    setLastName(user.last_name);\n    setUsername(user.username);\n  }, [user.first_name, user.last_name, user.username]);\n\n  return (\n    <Container className={classes.root} component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Your Account\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmitForm}>\n          <TextField\n            required\n            margin=\"normal\"\n            id=\"standard-required\"\n            fullWidth\n            placeholder={username}\n            onChange={onUsernameChange}\n          />\n          <TextField\n            required\n            margin=\"normal\"\n            id=\"standard-required\"\n            fullWidth\n            placeholder={firstName}\n            onChange={onFirstNameChange}\n          />\n          <TextField\n            required\n            margin=\"normal\"\n            id=\"standard-required\"\n            fullWidth\n            placeholder={lastName}\n            onChange={onLastNameChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Submit Changes\n          </Button>\n          <Link to=\"/\">\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onDeleteClick}\n              className={classes.submit}\n            >\n              Delete Account\n            </Button>\n          </Link>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default SettingsBodyContainer;\n","// React specific imports\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlannerBodyContainer from \"./PlannerBodyContainer\";\nimport LearningCenterBodyContainer from \"./LearningCenterBodyContainer\";\nimport SettingsBodyContainer from \"./SettingsBodyContainer\";\n\n// MUI imports\nimport Link from \"@material-ui/core/Link\";\nimport { logout } from \"../redux/actionList\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Box from \"@material-ui/core/Box\"\n\nconst useStyles = makeStyles(theme => ({ // theming for the components rendered in the Dashboard Body\n  root: { \n    display: \"flex\", // make the root container a flex box\n    maxHeight: \"100%\",\n    justifyContent: 'center'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1 // make the application bar stick \"in front\" of the sidebar\n  },\n  drawer: {\n    flexShrink: 0,// this side bar will not shrink AT ALL w/ respect to the other items\n  },\n  drawerPaper: {\n    paddingTop: '3%',\n    height: '280px'\n  },\n  content: {\n    padding: theme.spacing(4), // set MUI spacing of the content so it is spaced away from the sidebar and the header\n    height: '100vh',\n  },\n  box: {\n    display: 'flex'\n  },\n  toolbar: theme.mixins.toolbar // used for providing spacing\n}));\n\n// this method renders the Dashboard body\nexport default function DashboardBody(props) {\n  const classes = useStyles(); // rename the styles object as classes\n\n  const dispatch = useDispatch(); // create the dispatch object to set state\n\n  const user = useSelector(state => state.authReducer.user); // get user info from auth state\n\n  // This method logs the user out\n  const logoutUser = () => {\n    localStorage.removeItem(\"token\"); // removes the JWT token of the user from local storage\n    dispatch(logout()); // run the logout action for the auth reducer\n  };\n\n  // determines what dashboard content to render based on the selection props picked by the Dashboard Container parent\n  const getDashboardContentComponent = props => {\n    switch (props.selection) {\n      case \"planner\":\n        return <PlannerBodyContainer />;\n      case \"learning-center\":\n        return <LearningCenterBodyContainer />;\n      case \"settings\":\n        return <SettingsBodyContainer user={user}/>;\n      default:\n        return <PlannerBodyContainer />;\n    }\n  };\n\n  // 3 item array containing all the icons, names, and routes of each sidebar option ABOVE the divider\n  const upperSideBarOptions = [\n    [<EventNoteIcon />, \"Planner\", \"planner\"],\n    [<SettingsIcon />, \"Settings\", \"settings\"],\n    [<FitnessCenterIcon />, \"Learning Center\", \"learning-center\"]\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline /> {/* CSS Baseline for rest of component */}\n      \n      {/* Render the Header Bar Component */}\n      <AppBar position=\"fixed\" className={classes.appBar}> \n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            FlexABLE\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Box className={classes.box}>\n      <Drawer \n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <List>\n          {upperSideBarOptions.map(optionData => (\n            <Link href={optionData[2]} color=\"inherit\" key={Math.random()}>\n              <ListItem button>\n                <ListItemIcon>{optionData[0]}</ListItemIcon>\n                <ListItemText primary={optionData[1]} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          <Link href={\"/\"} color=\"inherit\" key={Math.random()}>\n            <ListItem button key={Math.random()} onClick={logoutUser}>\n              <ListItemIcon>{<ExitToAppIcon />}</ListItemIcon>\n              <ListItemText primary={\"Logout\"} />\n            </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n\n     \n      <main className={classes.content}>\n        {getDashboardContentComponent(props)}\n      </main>\n    </Box>\n    </div>\n  );\n}\n","// React imports\nimport React from \"react\";\nimport DashboardBody from \"./DashboardBody\";\n\n// MUI imports\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\n// set up the styles used in the Dashboard Container\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxHeight: \"100%\"\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\n// Renders the Dashboard Container (holds all the elements of the Dashboard)\nexport default function DashboardContainer(props) {\n  const classes = useStyles(); // rename the styles created above\n\n  // returns all the components\n  return (\n    <div className={classes.root}>\n      <DashboardBody selection={props.match.params.selection} />{\" \"}\n      {/* renders Dashboard Body along with selection params */}\n    </div>\n  );\n}\n","// React specific imports\nimport React, { useEffect } from \"react\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport { api } from \"../services/api\";\nimport { Route } from \"react-router-dom\";\nimport { signIn } from \"../redux/actionList\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LandingContainer from \"./LandingContainer\";\nimport DashboardContainer from \"./DashboardContainer\";\n\nconst MainContainer = props => {\n  // React hook to use Redux dispatch\n  const dispatch = useDispatch();\n  // After MainContainer Component Mounts On Page\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Get the JWT token from local storage\n    if (token) {\n      // If a JWT token exists in local storage\n      api.auth.getCurrentUser().then(user => {\n        dispatch(signIn(user));\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    // Renders the MainContainer component (a react-redux provider wrapped routing component)\n    <Router>\n      <div className=\"main-container\">\n        <Route exact path=\"/\" render={() => <LandingContainer />} />\n        <Route\n          exact\n          path=\"/login\"\n          render={routerProps => <SignIn {...routerProps} />}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={routerProps => <SignUp {...routerProps} />}\n        />\n        <Route\n          exact\n          path=\"/dashboard/:selection\"\n          render={routerProps => <DashboardContainer {...routerProps} />}\n        />\n      </div>\n    </Router>\n  );\n};\n\nexport default MainContainer;\n","import { SIGN_IN } from \"./authTypes\";\nimport { LOGOUT } from \"./authTypes\";\n\n// sets initial state for reducer\nconst initialState = {\n  user: {} // no user should be logged in initially\n};\n\n// auth reducer to handle redux actions for logging in and out\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN: // if the action is a sign in action\n      return {\n        ...state,\n        user: action.payload // set the user as the user contained in the action payload\n      };\n      case LOGOUT: // if the action is a logout action\n      return {\n        ...state,\n        user: {} // clear the user from state\n      };\n    default:\n      return state;\n  }\n};\n\n","import { GET_WORKOUTS } from \"./workoutTypes\";\n\n// set initial state for the selected date\nconst initialState = {\n  selectedWeekWorkouts: [[], [], [], [], [], [], []]\n};\n\n// calendar reducer that handles redux state when calendar dates are chosen\nexport const workoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORKOUTS: // if a date has been chosen\n      return {\n        selectedWeekWorkouts: action.payload // set the selected date state to the payload contained in the action\n      };\n    default:\n      return state;\n  }\n};\n","import { GET_EXERCISES } from \"./exerciseTypes\";\n\n// set initial state for the selected date\nconst initialState = {\n  exercises: []\n};\n\n// calendar reducer that handles redux state when calendar dates are chosen\nexport const exerciseReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_EXERCISES: // if a date has been chosen\n      return {\n        ...state,\n        exercises: action.payload // set the selected date state to the payload contained in the action\n      };\n    default:\n      return state;\n  }\n};\n","import { authReducer } from \"./auth/authReducer\";\nimport { combineReducers } from \"redux\";\nimport { workoutReducer } from \"./workout/workoutReducer\";\nimport { exerciseReducer } from \"./exercise/exerciseReducer\";\n\n// root reducer that contains/combines all the different reducers\nconst rootReducer = combineReducers({\n  authReducer, // handles authorization state\n  workoutReducer, // handles workout (planner) state\n  exerciseReducer // handles exercise state\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducerList\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport MainContainer from \"./MainContainer\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"../redux/store\";\n\n// This is the app component it simply renders a main container\nconst App = () => {\n  return (\n    <Router>\n      <Provider store={store}>\n        <MainContainer /> {/* Main container (fragment) */}\n      </Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}